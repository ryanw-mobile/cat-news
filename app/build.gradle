plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlinx.kover' version '0.5.0'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    signingConfigs {
        release
    }

    def isRunningOnBitrise = System.getenv("BITRISE") == "true"
    if (isRunningOnBitrise) {
        signingConfigs.release.storeFile = file(System.getenv("HOME") + "/keystores/release.jks")
        signingConfigs.release.storePassword = System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
        signingConfigs.release.keyAlias = System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
        signingConfigs.release.keyPassword = System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")

    } else {
        Properties keyProps = new Properties()
        keyProps.load(new FileInputStream(file('../../keystore.properties')))
        signingConfigs.release.storeFile = file(keyProps["store"])
        signingConfigs.release.keyAlias = keyProps["alias"]
        signingConfigs.release.storePassword = keyProps["storePass"]
        signingConfigs.release.keyPassword = keyProps["pass"]
    }

    defaultConfig {
        applicationId "uk.ryanwong.skycatnews"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "uk.ryanwong.skycatnews.app.ui.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Bundle output filename
        setProperty("archivesBaseName", "skycatnews-" + versionName + "-" + new Date().format('yyyyMMdd-HHmmss'))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false

            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date()
                    def formattedDate = date.format('yyyyMMdd-HHmmss')
                    outputFileName = "skycatnews-${variant.name}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }

        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date()
                    def formattedDate = date.format('yyyyMMdd-HHmmss')
                    outputFileName = "skycatnews-${variant.name}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }
    }

    flavorDimensions "datasource"
    productFlavors {
        fake {
            dimension 'datasource'
            buildConfigField "String", "DEFAULT_BASE_URL", '""'
        }
        prod {
            dimension 'datasource'
            buildConfigField "String", "DEFAULT_BASE_URL", '"https://ryanwong.co.uk/restapis"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }

        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha02"
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'androidx.navigation:navigation-compose:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    // Coil
    implementation 'io.coil-kt:coil:2.2.0'
    implementation 'io.coil-kt:coil-compose:2.2.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Dagger-Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"

    // Ktor
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0'
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"

    // RoomDB
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Accompanist
    implementation 'com.google.accompanist:accompanist-webview:0.26.2-beta'
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.26.2-beta'

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    // Mockk
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
}


ktlint {
    android = true
    ignoreFailures = false
    disabledRules = ["max-line-length"]
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")

tasks.koverMergedHtmlReport {
    excludes = [
            'dagger.hilt.internal.aggregatedroot.codegen.*',
            'hilt_aggregated_deps.*',
            'uk.ryanwong.skycatnews.app.ui.*',
            'uk.ryanwong.skycatnews.*.ui.screen.*',
            'uk.ryanwong.skycatnews.*.di.*',
            'uk.ryanwong.skycatnews.*.Hilt_*',
            'uk.ryanwong.skycatnews.*.*_Factory*',
            'uk.ryanwong.skycatnews.*.*_HiltModules*',
            'uk.ryanwong.skycatnews.*.*Module_*',
            'uk.ryanwong.skycatnews.*.*MembersInjector*',
            'uk.ryanwong.skycatnews.*.*_Impl*',
            'uk.ryanwong.skycatnews.ComposableSingletons*',
            'uk.ryanwong.skycatnews.BuildConfig*',
            'uk.ryanwong.skycatnews.*.Fake*',
            'uk.ryanwong.skycatnews.*.previewparameter*',
            'uk.ryanwong.skycatnews.app.ComposableSingletons*'
    ]
}

tasks.koverMergedXmlReport {
    excludes = [
            'dagger.hilt.internal.aggregatedroot.codegen.*',
            'hilt_aggregated_deps.*',
            'uk.ryanwong.skycatnews.app.ui.*',
            'uk.ryanwong.skycatnews.*.ui.screen.*',
            'uk.ryanwong.skycatnews.*.di.*',
            'uk.ryanwong.skycatnews.*.Hilt_*',
            'uk.ryanwong.skycatnews.*.*_Factory*',
            'uk.ryanwong.skycatnews.*.*_HiltModules*',
            'uk.ryanwong.skycatnews.*.*Module_*',
            'uk.ryanwong.skycatnews.*.*MembersInjector*',
            'uk.ryanwong.skycatnews.*.*_Impl*',
            'uk.ryanwong.skycatnews.ComposableSingletons*',
            'uk.ryanwong.skycatnews.BuildConfig*',
            'uk.ryanwong.skycatnews.*.Fake*',
            'uk.ryanwong.skycatnews.*.previewparameter*',
            'uk.ryanwong.skycatnews.app.ComposableSingletons*'
    ]
}